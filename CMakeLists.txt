CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

PROJECT(DRONE)

## Default install prefix : /usr
SET(CMAKE_INSTALL_PREFIX /usr)
option(CMAKE_INSTALL_PREFIX "CMAKE_INSTALL_PREFIX" ${CMAKE_INSTALL_PREFIX})

## Default build type : REALEASE
IF (CMAKE_BUILD_TYPE STREQUAL "")
	SET(CMAKE_BUILD_TYPE RELEASE)
ENDIF (CMAKE_BUILD_TYPE STREQUAL "")

## X86_64 Arch compliance
option(BUILD_x86_64 "Build x86_64 ARCH" OFF)
IF ( BUILD_x86_64 EQUAL ON)
  SET(LIB_INSTALL_DIR "lib64")
ELSE ( BUILD_x86_64 EQUAL ON)
  SET(LIB_INSTALL_DIR "lib")
ENDIF ( BUILD_x86_64 EQUAL ON)

INCLUDE_DIRECTORIES( ${CMAKE_BINARY_DIR} )

SET(EXECUTABLE_OUTPUT_PATH "${DRONE_BINARY_DIR}/bin")
SET(LIBRARY_OUTPUT_PATH "${DRONE_BINARY_DIR}/lib")


## Find requiered Libraries
FIND_LIBRARY(M_LIBRARY
    NAMES m
    PATHS /usr/lib /usr/local/lib /usr/${LIB_INSTALL_DIR}
)
IF(NOT M_LIBRARY)
    MESSAGE(STATUS
      "math library 'libm' not found - floating point support disabled")
ENDIF()


ADD_SUBDIRECTORY(External_Sources)
ADD_SUBDIRECTORY(src)
ADD_SUBDIRECTORY(tools)


INCLUDE_DIRECTORIES(${linux_mpu9150_INCLUDE_DIRS})
LINK_DIRECTORIES(${linux_mpu9150_LIBRARY_DIRS})


## Install step for linux_mpu9150 library
INSTALL (FILES "${PROJECT_BINARY_DIR}/lib/liblinux_mpu9150.so" DESTINATION ${LIB_INSTALL_DIR} PERMISSIONS
		OWNER_READ OWNER_WRITE OWNER_EXECUTE
		GROUP_READ GROUP_EXECUTE
		WORLD_READ WORLD_EXECUTE
		)
INSTALL( FILES "${PROJECT_BINARY_DIR}/bin/imu" DESTINATION bin PERMISSIONS
		OWNER_EXECUTE
		GROUP_EXECUTE
		WORLD_EXECUTE 
		)
INSTALL( FILES "${PROJECT_BINARY_DIR}/bin/imucal" DESTINATION bin PERMISSIONS
		OWNER_EXECUTE
		GROUP_EXECUTE
		WORLD_EXECUTE 
		)
INSTALL( FILES ${linux_mpu9150_HDRS} DESTINATION include/linux_mpu9150 PERMISSIONS
		OWNER_READ OWNER_WRITE
		GROUP_READ
		WORLD_READ
		)

